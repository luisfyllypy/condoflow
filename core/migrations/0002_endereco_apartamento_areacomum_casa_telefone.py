# Generated by Django 5.2.3 on 2025-06-25 04:07

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Endereco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.IntegerField(verbose_name='Número')),
                ('tipo', models.CharField(choices=[('CASA', 'Casa'), ('APARTAMENTO', 'Apartamento'), ('AREA_COMUM', 'Área Comum')], max_length=12, verbose_name='Tipo')),
            ],
            options={
                'verbose_name': 'Endereço',
                'verbose_name_plural': 'Endereços',
            },
        ),
        migrations.CreateModel(
            name='Apartamento',
            fields=[
                ('endereco_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.endereco')),
                ('andar', models.CharField(max_length=50, verbose_name='Andar')),
                ('predio', models.CharField(blank=True, max_length=50, null=True, verbose_name='Prédio/Bloco')),
            ],
            options={
                'verbose_name': 'Apartamento',
                'verbose_name_plural': 'Apartamentos',
            },
            bases=('core.endereco',),
        ),
        migrations.CreateModel(
            name='AreaComum',
            fields=[
                ('endereco_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.endereco')),
                ('nome', models.CharField(max_length=20, verbose_name='Nome da Área')),
                ('reservavel', models.BooleanField(default=False, verbose_name='É Reservável?')),
                ('descricao', models.TextField(max_length=1000, verbose_name='Descrição')),
                ('local', models.CharField(blank=True, max_length=100, null=True, verbose_name='Localização')),
                ('lotacao', models.IntegerField(blank=True, null=True, verbose_name='Lotação Máxima')),
            ],
            options={
                'verbose_name': 'Área Comum',
                'verbose_name_plural': 'Áreas Comuns',
            },
            bases=('core.endereco',),
        ),
        migrations.CreateModel(
            name='Casa',
            fields=[
                ('endereco_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.endereco')),
                ('rua', models.CharField(max_length=50, verbose_name='Rua')),
                ('conjunto', models.CharField(blank=True, max_length=50, null=True, verbose_name='Conjunto')),
            ],
            options={
                'verbose_name': 'Casa',
                'verbose_name_plural': 'Casas',
            },
            bases=('core.endereco',),
        ),
        migrations.CreateModel(
            name='Telefone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=15, verbose_name='Número')),
                ('tipo', models.CharField(choices=[('FIXO', 'Fixo'), ('CELULAR', 'Celular')], default='CELULAR', max_length=7, verbose_name='Tipo')),
                ('endereco', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='telefones', to='core.endereco', verbose_name='Endereço')),
                ('pessoa', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='telefones', to='core.pessoa', verbose_name='Pessoa')),
            ],
            options={
                'verbose_name': 'Telefone',
                'verbose_name_plural': 'Telefones',
                'constraints': [models.CheckConstraint(condition=models.Q(models.Q(('pessoa__isnull', False), ('endereco__isnull', True)), models.Q(('pessoa__isnull', True), ('endereco__isnull', False)), _connector='OR'), name='telefone_pertence_a_pessoa_ou_endereco')],
            },
        ),
    ]
